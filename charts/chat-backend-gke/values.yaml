nameSecretCert: "chat-backend-secret-cert"

# chat-backend:
brunoeas-aplic-gke:
  service:
    port: 8080
    type: "NodePort"

  ingress:
    enabled: true
    globalPublicStaticIPName: "ip-estatico-publico-global"
    tls:
      - secretName: "chat-backend-secret-cert"
        hosts:
          - bruno-eduardo-a-soares.com.br

  image: 
    repository: "brunoeas1/chat-backend"
    tag: "0.0.1-SNAPSHOT.4"
    pullPolicy: "IfNotPresent"

  replicaCount: 1
  environments:
    - name: QUARKUS_REDIS_HOSTS
      value: "redis://redis-chat-backend-deploy-service.default.svc.cluster.local:6379"
    - name: QUARKUS_HTTP_CORS
      value: "true"
    - name: QUARKUS_HTTP_CORS_ORIGINS
      value: "*"
    - name: QUARKUS_HTTP_CORS_HEADERS
      value: "*"
    - name: QUARKUS_HTTP_CORS_ACCESS_CONTROL_MAX_AGE
      value: "1800"
    - name: QUARKUS_HTTP_CORS_ACCESS_CONTROL_ALLOW_CREDENTIALS
      value: "true"
    - name: QUARKUS_HTTP_CORS_METHODS
      value: "GET,POST,PUT,DELETE"
  resources:
    requests:
      cpu: 500m
      memory: 100Mi
      ephemeralStorage: 100Mi
    limits:
      cpu: 1000m
      memory: 500Mi
      ephemeralStorage: 500Mi
  readinessProbe:
    timeoutSeconds: 5
    initialDelaySeconds: 10
    httpGet:
      path: /q/health/ready
      port: http
      scheme: HTTP
  livenessProbe:
    timeoutSeconds: 5
    initialDelaySeconds: 10
    httpGet:
      path: /q/health/live
      port: http
      scheme: HTTP
  startupProbe:
    timeoutSeconds: 5
    initialDelaySeconds: 7
    httpGet:
      path: /q/health/started
      port: http
      scheme: HTTP

  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # This is to override the chart name.
  #nameOverride: ""
  #fullnameOverride: ""

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}

  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}
  tolerations: []
  affinity: {}